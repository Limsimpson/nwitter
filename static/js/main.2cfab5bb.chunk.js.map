{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweet","isOwner","editing","setEditing","text","newNweet","setNewNweet","toggleEditing","doc","id","update","onDeleteClick","window","confirm","delete","refFromURL","attachmentUrl","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","setNweet","attachment","setAttachment","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","nweetObj","createAt","Date","now","creatorId","collection","add","document","getElementById","maxLength","htmlFor","faPlus","accep","width","height","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetsList","docs","map","key","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","vluae","signOut","push","Navigation","to","faUser","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2cfab5bb.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      return data;\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form className=\"container\" onSubmit={onSubmit}>\n        <input\n          className=\"authInput\"\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          className=\"authInput\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          className=\"authInput authSubmit\"\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign in\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span className=\"authSwitch\" onClick={toggleAccount}>\n        {newAccount ? \"Sign in\" : \"CreateAccount\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (e) => {\n    const { name } = e.target;\n    let provider;\n\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button className=\"authBtn\" name=\"google\" onClick={onSocialClick}>\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button className=\"authBtn\" name=\"github\" onClick={onSocialClick}>\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweet, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweet.text);\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n    setNewNweet(nweet.text);\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNewNweet(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.doc(`nweets/${nweet.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweet.id}`).delete();\n      await storageService.refFromURL(nweet.attachmentUrl).delete();\n    }\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form className=\"container nweetEdit\" onSubmit={onSubmit}>\n                <input\n                  className=\"formInput nweet-input\"\n                  type=\"text\"\n                  placeholder=\"Edit your nweet.\"\n                  value={newNweet}\n                  required\n                  autoFocus\n                  onChange={onChange}\n                />\n                <input className=\"formBtn\" type=\"submit\" value=\"Update Nweet\" />\n              </form>\n              <button className=\"formBtn cancelBtn\" onClick={toggleEditing}>\n                Cancel\n              </button>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweet.text}</h4>\n          {nweet.attachmentUrl && <img src={nweet.attachmentUrl} alt=\"nweet\" />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <button onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </button>\n              <button onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNweet(value);\n  };\n\n  const onFileChange = async (e) => {\n    const { files } = e.target;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const { result } = finishedEvent.currentTarget;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => {\n    document.getElementById(\"attach-file\").value = \"\";\n    setAttachment(\"\");\n  };\n\n  const onSubmit = async (e) => {\n    if (nweet === \"\") {\n      return;\n    }\n\n    e.preventDefault();\n\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    document.getElementById(\"attach-file\").value = \"\";\n    setAttachment(\"\");\n  };\n\n  return (\n    <form className=\"factoryForm\" onSubmit={onSubmit}>\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n          value={nweet}\n          onChange={onChange}\n        />\n        <input className=\"factoryInput__arrow\" type=\"submit\" value=\"&rarr;\" />\n      </div>\n      <label className=\"factoryInput__label\" htmlFor=\"attach-file\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accep=\"image/*\"\n        onChange={onFileChange}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            width=\"50px\"\n            height=\"50px\"\n            alt=\"nweet\"\n            style={{ backgroundImage: attachment }}\n          />\n          <button className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetsList = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetsList);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div className=\"containerNweet\">\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweet={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService } from \"fbase\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  // const getMyNweets = async () => {\n  //   const nweets = await dbService\n  //     .collection(\"nweets\")\n  //     .where(\"creatorId\", \"==\", userObj.uid)\n  //     .orderBy(\"createAt\")\n  //     .get();\n  //   nweets = await nweets.docs.map((doc) => doc.data());\n  // };\n\n  // useEffect(() => {\n  //   getMyNweets();\n  // }, []);\n\n  return (\n    <div className=\"container\">\n      <form className=\"profileForm\" onSubmit={onSubmit}>\n        <input\n          className=\"formInput\"\n          type=\"text\"\n          placeholder=\"Display Name\"\n          vluae={newDisplayName}\n          autoFocus\n          onChange={onChange}\n        />\n        <input className=\"formBtn\" type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log out\n      </button>\n    </div>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul className=\"navWrap\">\n        <li>\n          <Link to=\"/\">\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span className=\"profileText\">\n              {userObj.displayName\n                ? `${userObj.displayName}'s Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <div className=\"routerwrap\">\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}